package view;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class Levels extends javax.swing.JDialog {
    
    private int h, w, count = 0, result;
    private final String[][] removes = new String [40][5];
    private boolean entered = false;
    /**
     * Creates new form Levels
     */
    public Levels(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Difficulty = new javax.swing.JLabel();
        easy = new javax.swing.JButton();
        normal = new javax.swing.JButton();
        hard = new javax.swing.JButton();
        cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Challenge");

        Difficulty.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        Difficulty.setText("Please choose the difficulty");

        easy.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        easy.setText("Easy");
        easy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                easyActionPerformed(evt);
            }
        });

        normal.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        normal.setText("Normal");
        normal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                normalActionPerformed(evt);
            }
        });

        hard.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        hard.setText("Hard");
        hard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hardActionPerformed(evt);
            }
        });

        cancel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(Difficulty, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(easy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(normal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(hard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Difficulty, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(easy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(normal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(hard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancel)
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void easyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_easyActionPerformed
        try {
            if (entered == false) {
            BufferedReader reader = new BufferedReader(new FileReader("level1.txt"));
            String line;
            String[] array;
            while ((line = reader.readLine()) != null) {
                array = line.split("[ ,]");
                for (int i = 0; i < array.length; i++) {
                   if (array.length == 2 && i == 0)
                       h = Integer.valueOf(array[i]);
                   if (array.length == 2 && i == 1)
                       w = Integer.valueOf(array[i]);
                   if (array.length > 2) {
                       removes[count][i] = array[i];
                       if (i == array.length - 1)
                           count++;
                   }
                }
            }
            reader.close();
            entered = true;
            result = 10;
            this.dispose();}
        } catch (IOException e) {            
        }
    }//GEN-LAST:event_easyActionPerformed

    private void normalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalActionPerformed
          try {
            BufferedReader reader = new BufferedReader(new FileReader("level2.txt"));
            String line;
            String[] array;
            while ((line = reader.readLine()) != null) {
                array = line.split("[ ,]");
                for (int i = 0; i < array.length; i++) {
                   if (array.length == 2 && i == 0)
                       h = Integer.valueOf(array[i]);
                   if (array.length == 2 && i == 1)
                       w = Integer.valueOf(array[i]);
                   if (array.length > 2) {
                       removes[count][i] = array[i];
                       if (i == array.length - 1)
                           count++;
                   }
                }
            }
            reader.close();
            entered = true;
            result = 22;
            this.dispose();
        } catch (IOException e) {            
        }
    }//GEN-LAST:event_normalActionPerformed

    private void hardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hardActionPerformed
        try {
            BufferedReader reader = new BufferedReader(new FileReader("level3.txt"));
            String line;
            String[] array;
            while ((line = reader.readLine()) != null) {
                array = line.split("[ ,]");
                for (int i = 0; i < array.length; i++) {
                   if (array.length == 2 && i == 0)
                       h = Integer.valueOf(array[i]);
                   if (array.length == 2 && i == 1)
                       w = Integer.valueOf(array[i]);
                   if (array.length > 2) {
                       removes[count][i] = array[i];
                       if (i == array.length - 1)
                           count++;
                   }
                }
            }
            reader.close();
            entered = true;
            result = 42;
            this.dispose();
        } catch (IOException e) {            
        }
    }//GEN-LAST:event_hardActionPerformed

    public int getResult() {
        return result;
    }

    public boolean isEntered() {
        return entered;
    }

    public int getH() {
        return h;
    }

    public int getW() {
        return w;
    }
    
    public String[][] getRemoves() {
        return removes;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Levels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Levels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Levels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Levels.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Levels dialog = new Levels(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Difficulty;
    private javax.swing.JButton cancel;
    private javax.swing.JButton easy;
    private javax.swing.JButton hard;
    private javax.swing.JButton normal;
    // End of variables declaration//GEN-END:variables
}
